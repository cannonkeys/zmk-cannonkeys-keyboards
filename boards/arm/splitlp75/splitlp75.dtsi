/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>

#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/matrix_transform.h>

#include "splitlp75-pinctrl.dtsi"

/ {
    model = "splitlp75";
    compatible = "cannonkeys,splitlp75";

    chosen {
        zephyr,code-partition = &code_partition;
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
        zmk,battery = &vbatt;
        zmk,kscan = &kscan0;
        zmk,underglow = &led_strip;
        zmk,matrix_transform = &default_transform;
    };
/* Note - RC(6,17) and RC(6,16) are impossible placeholders just to make the keymap work
   PCB error has RC(4,10) mapped to M and comma (both)
   PCB error also has RC(5,9) mapped to both space and N
*/
    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <18>;
        rows = <7>;
        map = <
RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(6,7)    RC(0,8)  RC(0,9)  RC(0,10) RC(0,11) RC(0,12) RC(0,13) RC(0,14) RC(0,15) RC(0,16)
RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6)    RC(1,8)  RC(1,9)  RC(1,10) RC(1,11) RC(1,12) RC(1,13)          RC(1,15) RC(1,16)
RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)            RC(6,8)  RC(2,9)  RC(2,10) RC(2,11) RC(2,12) RC(2,13) RC(2,14) RC(2,15) RC(2,16)
RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)            RC(5,17) RC(3,9)  RC(3,10) RC(3,11) RC(3,12) RC(3,13)          RC(3,15) RC(3,16)
RC(4,0)         RC(4,2) RC(4,3) RC(4,4) RC(4,5) RC(4,6)    RC(5,9)  RC(4,17) RC(4,10) RC(4,11) RC(4,12)          RC(4,14) RC(4,15) RC(4,16)
RC(5,0) RC(5,1) RC(5,2)         RC(5,4)         RC(5,6)             RC(5,10)           RC(5,11) RC(5,12) RC(5,13) RC(5,14) RC(5,15) RC(5,16)
        >;
    };

    vbatt: vbatt {
        compatible = "zmk,battery-nrf-vddh";
        label = "BATTERY";
    };

    right_encoder: encoder_right {
        compatible = "alps,ec11";
        a-gpios = <&gpio0 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 22 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <48>;
        status = "disabled";
    };

    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&right_encoder>;
        triggers-per-rotation = <12>;
    };

};


&adc {
    status = "okay";
};

&gpiote {
    status = "okay";
};

&gpio0 {
    status = "okay";
};

&gpio1 {
    status = "okay";
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";

    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";

        /* SPI */
        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <1>; /* number of LEDs */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <LED_COLOR_ID_GREEN
                         LED_COLOR_ID_RED
                         LED_COLOR_ID_BLUE>;
    };
};

zephyr_udc0: &usbd {
    status = "okay";
};

&flash0 {
    /*
     * For more information, see:
     * http://docs.zephyrproject.org/latest/devices/dts/flash_partitions.html
     */
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        sd_partition: partition@0 {
            label = "mbr";
            reg = <0x00000000 0x00001000>;
        };

        code_partition: partition@1000 {
            label = "code_partition";
            reg = <0x00001000 0x000d3000>;
        };

        /*
         * The flash starting at 0x000d4000 and ending at
         * 0x000f3fff is reserved for use by the application.
         */

        /*
         * Storage partition will be used by FCB/LittleFS/NVS
         * if enabled.
         */
        storage_partition: partition@d4000 {
            label = "storage";
            reg = <0x000d4000 0x00020000>;
        };

        boot_partition: partition@f4000 {
            label = "adafruit_boot";
            reg = <0x000f4000 0x0000c000>;
        };
    };
};